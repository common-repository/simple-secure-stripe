{"version":3,"file":"127.js","mappings":"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","sources":["webpack://simple-secure-stripe/./node_modules/.pnpm/@stripe+stripe-js@1.54.1/node_modules/@stripe/stripe-js/dist/stripe.esm.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+api-fetch@6.32.0/node_modules/@wordpress/api-fetch/build-module/middlewares/fetch-all-middleware.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+api-fetch@6.32.0/node_modules/@wordpress/api-fetch/build-module/middlewares/http-v1.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+api-fetch@6.32.0/node_modules/@wordpress/api-fetch/build-module/middlewares/media-upload.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+api-fetch@6.32.0/node_modules/@wordpress/api-fetch/build-module/middlewares/namespace-endpoint.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+api-fetch@6.32.0/node_modules/@wordpress/api-fetch/build-module/middlewares/nonce.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+url@3.36.0/node_modules/@wordpress/url/build-module/normalize-path.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+api-fetch@6.32.0/node_modules/@wordpress/api-fetch/build-module/middlewares/preloading.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+api-fetch@6.32.0/node_modules/@wordpress/api-fetch/build-module/middlewares/root-url.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+api-fetch@6.32.0/node_modules/@wordpress/api-fetch/build-module/middlewares/theme-preview.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+api-fetch@6.32.0/node_modules/@wordpress/api-fetch/build-module/middlewares/user-locale.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+api-fetch@6.32.0/node_modules/@wordpress/api-fetch/build-module/utils/response.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+hooks@3.35.0/node_modules/@wordpress/hooks/build-module/validateNamespace.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+hooks@3.35.0/node_modules/@wordpress/hooks/build-module/validateHookName.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+hooks@3.35.0/node_modules/@wordpress/hooks/build-module/createAddHook.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+hooks@3.35.0/node_modules/@wordpress/hooks/build-module/createRemoveHook.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+hooks@3.35.0/node_modules/@wordpress/hooks/build-module/createHasHook.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+hooks@3.35.0/node_modules/@wordpress/hooks/build-module/createRunHook.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+hooks@3.35.0/node_modules/@wordpress/hooks/build-module/createCurrentHook.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+hooks@3.35.0/node_modules/@wordpress/hooks/build-module/createDoingHook.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+hooks@3.35.0/node_modules/@wordpress/hooks/build-module/createDidHook.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+hooks@3.35.0/node_modules/@wordpress/hooks/build-module/createHooks.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@tannin+postfix@1.1.0/node_modules/@tannin/postfix/index.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@tannin+evaluate@1.2.0/node_modules/@tannin/evaluate/index.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@tannin+compile@1.1.0/node_modules/@tannin/compile/index.js","webpack://simple-secure-stripe/./node_modules/.pnpm/tannin@1.2.0/node_modules/tannin/index.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@tannin+plural-forms@1.1.0/node_modules/@tannin/plural-forms/index.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+i18n@4.35.0/node_modules/@wordpress/i18n/build-module/create-i18n.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+i18n@4.35.0/node_modules/@wordpress/i18n/build-module/default-i18n.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+url@3.36.0/node_modules/@wordpress/url/build-module/add-query-args.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+url@3.36.0/node_modules/@wordpress/url/build-module/build-query-string.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+url@3.36.0/node_modules/@wordpress/url/build-module/safe-decode-uri-component.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+url@3.36.0/node_modules/@wordpress/url/build-module/get-query-args.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+url@3.36.0/node_modules/@wordpress/url/build-module/get-query-string.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+url@3.36.0/node_modules/@wordpress/url/build-module/has-query-arg.js","webpack://simple-secure-stripe/./node_modules/.pnpm/@wordpress+url@3.36.0/node_modules/@wordpress/url/build-module/get-query-arg.js","webpack://simple-secure-stripe/./node_modules/.pnpm/memize@2.1.0/node_modules/memize/dist/index.js"],"sourcesContent":["var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.54.1\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n// own script injection.\n\nvar stripePromise$1 = Promise.resolve().then(function () {\n  return loadScript(null);\n});\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now();\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n/**\n * Internal dependencies\n */\n\nimport apiFetch from '..';\n/**\n * Apply query arguments to both URL and Path, whichever is present.\n *\n * @param {import('../types').APIFetchOptions} props\n * @param {Record<string, string | number>}    queryArgs\n * @return {import('../types').APIFetchOptions} The request with the modified query args\n */\n\nconst modifyQuery = ({\n  path,\n  url,\n  ...options\n}, queryArgs) => ({ ...options,\n  url: url && addQueryArgs(url, queryArgs),\n  path: path && addQueryArgs(path, queryArgs)\n});\n/**\n * Duplicates parsing functionality from apiFetch.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response json.\n */\n\n\nconst parseResponse = response => response.json ? response.json() : Promise.reject(response);\n/**\n * @param {string | null} linkHeader\n * @return {{ next?: string }} The parsed link header.\n */\n\n\nconst parseLinkHeader = linkHeader => {\n  if (!linkHeader) {\n    return {};\n  }\n\n  const match = linkHeader.match(/<([^>]+)>; rel=\"next\"/);\n  return match ? {\n    next: match[1]\n  } : {};\n};\n/**\n * @param {Response} response\n * @return {string | undefined} The next page URL.\n */\n\n\nconst getNextPageUrl = response => {\n  const {\n    next\n  } = parseLinkHeader(response.headers.get('link'));\n  return next;\n};\n/**\n * @param {import('../types').APIFetchOptions} options\n * @return {boolean} True if the request contains an unbounded query.\n */\n\n\nconst requestContainsUnboundedQuery = options => {\n  const pathIsUnbounded = !!options.path && options.path.indexOf('per_page=-1') !== -1;\n  const urlIsUnbounded = !!options.url && options.url.indexOf('per_page=-1') !== -1;\n  return pathIsUnbounded || urlIsUnbounded;\n};\n/**\n * The REST API enforces an upper limit on the per_page option. To handle large\n * collections, apiFetch consumers can pass `per_page=-1`; this middleware will\n * then recursively assemble a full response array from all available pages.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\n\n\nconst fetchAllMiddleware = async (options, next) => {\n  if (options.parse === false) {\n    // If a consumer has opted out of parsing, do not apply middleware.\n    return next(options);\n  }\n\n  if (!requestContainsUnboundedQuery(options)) {\n    // If neither url nor path is requesting all items, do not apply middleware.\n    return next(options);\n  } // Retrieve requested page of results.\n\n\n  const response = await apiFetch({ ...modifyQuery(options, {\n      per_page: 100\n    }),\n    // Ensure headers are returned for page 1.\n    parse: false\n  });\n  const results = await parseResponse(response);\n\n  if (!Array.isArray(results)) {\n    // We have no reliable way of merging non-array results.\n    return results;\n  }\n\n  let nextPage = getNextPageUrl(response);\n\n  if (!nextPage) {\n    // There are no further pages to request.\n    return results;\n  } // Iteratively fetch all remaining pages until no \"next\" header is found.\n\n\n  let mergedResults =\n  /** @type {any[]} */\n  [].concat(results);\n\n  while (nextPage) {\n    const nextResponse = await apiFetch({ ...options,\n      // Ensure the URL for the next page is used instead of any provided path.\n      path: undefined,\n      url: nextPage,\n      // Ensure we still get headers so we can identify the next page.\n      parse: false\n    });\n    const nextResults = await parseResponse(nextResponse);\n    mergedResults = mergedResults.concat(nextResults);\n    nextPage = getNextPageUrl(nextResponse);\n  }\n\n  return mergedResults;\n};\n\nexport default fetchAllMiddleware;\n//# sourceMappingURL=fetch-all-middleware.js.map","/**\n * Set of HTTP methods which are eligible to be overridden.\n *\n * @type {Set<string>}\n */\nconst OVERRIDE_METHODS = new Set(['PATCH', 'PUT', 'DELETE']);\n/**\n * Default request method.\n *\n * \"A request has an associated method (a method). Unless stated otherwise it\n * is `GET`.\"\n *\n * @see  https://fetch.spec.whatwg.org/#requests\n *\n * @type {string}\n */\n\nconst DEFAULT_METHOD = 'GET';\n/**\n * API Fetch middleware which overrides the request method for HTTP v1\n * compatibility leveraging the REST API X-HTTP-Method-Override header.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\n\nconst httpV1Middleware = (options, next) => {\n  const {\n    method = DEFAULT_METHOD\n  } = options;\n\n  if (OVERRIDE_METHODS.has(method.toUpperCase())) {\n    options = { ...options,\n      headers: { ...options.headers,\n        'X-HTTP-Method-Override': method,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    };\n  }\n\n  return next(options);\n};\n\nexport default httpV1Middleware;\n//# sourceMappingURL=http-v1.js.map","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n/**\n * Internal dependencies\n */\n\nimport { parseAndThrowError, parseResponseAndNormalizeError } from '../utils/response';\n/**\n * @param {import('../types').APIFetchOptions} options\n * @return {boolean} True if the request is for media upload.\n */\n\nfunction isMediaUploadRequest(options) {\n  const isCreateMethod = !!options.method && options.method === 'POST';\n  const isMediaEndpoint = !!options.path && options.path.indexOf('/wp/v2/media') !== -1 || !!options.url && options.url.indexOf('/wp/v2/media') !== -1;\n  return isMediaEndpoint && isCreateMethod;\n}\n/**\n * Middleware handling media upload failures and retries.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\n\n\nconst mediaUploadMiddleware = (options, next) => {\n  if (!isMediaUploadRequest(options)) {\n    return next(options);\n  }\n\n  let retries = 0;\n  const maxRetries = 5;\n  /**\n   * @param {string} attachmentId\n   * @return {Promise<any>} Processed post response.\n   */\n\n  const postProcess = attachmentId => {\n    retries++;\n    return next({\n      path: `/wp/v2/media/${attachmentId}/post-process`,\n      method: 'POST',\n      data: {\n        action: 'create-image-subsizes'\n      },\n      parse: false\n    }).catch(() => {\n      if (retries < maxRetries) {\n        return postProcess(attachmentId);\n      }\n\n      next({\n        path: `/wp/v2/media/${attachmentId}?force=true`,\n        method: 'DELETE'\n      });\n      return Promise.reject();\n    });\n  };\n\n  return next({ ...options,\n    parse: false\n  }).catch(response => {\n    const attachmentId = response.headers.get('x-wp-upload-attachment-id');\n\n    if (response.status >= 500 && response.status < 600 && attachmentId) {\n      return postProcess(attachmentId).catch(() => {\n        if (options.parse !== false) {\n          return Promise.reject({\n            code: 'post_process',\n            message: __('Media upload failed. If this is a photo or a large image, please scale it down and try again.')\n          });\n        }\n\n        return Promise.reject(response);\n      });\n    }\n\n    return parseAndThrowError(response, options.parse);\n  }).then(response => parseResponseAndNormalizeError(response, options.parse));\n};\n\nexport default mediaUploadMiddleware;\n//# sourceMappingURL=media-upload.js.map","/**\n * @type {import('../types').APIFetchMiddleware}\n */\nconst namespaceAndEndpointMiddleware = (options, next) => {\n  let path = options.path;\n  let namespaceTrimmed, endpointTrimmed;\n\n  if (typeof options.namespace === 'string' && typeof options.endpoint === 'string') {\n    namespaceTrimmed = options.namespace.replace(/^\\/|\\/$/g, '');\n    endpointTrimmed = options.endpoint.replace(/^\\//, '');\n\n    if (endpointTrimmed) {\n      path = namespaceTrimmed + '/' + endpointTrimmed;\n    } else {\n      path = namespaceTrimmed;\n    }\n  }\n\n  delete options.namespace;\n  delete options.endpoint;\n  return next({ ...options,\n    path\n  });\n};\n\nexport default namespaceAndEndpointMiddleware;\n//# sourceMappingURL=namespace-endpoint.js.map","/**\n * @param {string} nonce\n * @return {import('../types').APIFetchMiddleware & { nonce: string }} A middleware to enhance a request with a nonce.\n */\nfunction createNonceMiddleware(nonce) {\n  /**\n   * @type {import('../types').APIFetchMiddleware & { nonce: string }}\n   */\n  const middleware = (options, next) => {\n    const {\n      headers = {}\n    } = options; // If an 'X-WP-Nonce' header (or any case-insensitive variation\n    // thereof) was specified, no need to add a nonce header.\n\n    for (const headerName in headers) {\n      if (headerName.toLowerCase() === 'x-wp-nonce' && headers[headerName] === middleware.nonce) {\n        return next(options);\n      }\n    }\n\n    return next({ ...options,\n      headers: { ...headers,\n        'X-WP-Nonce': middleware.nonce\n      }\n    });\n  };\n\n  middleware.nonce = nonce;\n  return middleware;\n}\n\nexport default createNonceMiddleware;\n//# sourceMappingURL=nonce.js.map","/**\n * Given a path, returns a normalized path where equal query parameter values\n * will be treated as identical, regardless of order they appear in the original\n * text.\n *\n * @param {string} path Original path.\n *\n * @return {string} Normalized path.\n */\nexport function normalizePath(path) {\n  const splitted = path.split('?');\n  const query = splitted[1];\n  const base = splitted[0];\n\n  if (!query) {\n    return base;\n  } // 'b=1%2C2&c=2&a=5'\n\n\n  return base + '?' + query // [ 'b=1%2C2', 'c=2', 'a=5' ]\n  .split('&') // [ [ 'b, '1%2C2' ], [ 'c', '2' ], [ 'a', '5' ] ]\n  .map(entry => entry.split('=')) // [ [ 'b', '1,2' ], [ 'c', '2' ], [ 'a', '5' ] ]\n  .map(pair => pair.map(decodeURIComponent)) // [ [ 'a', '5' ], [ 'b, '1,2' ], [ 'c', '2' ] ]\n  .sort((a, b) => a[0].localeCompare(b[0])) // [ [ 'a', '5' ], [ 'b, '1%2C2' ], [ 'c', '2' ] ]\n  .map(pair => pair.map(encodeURIComponent)) // [ 'a=5', 'b=1%2C2', 'c=2' ]\n  .map(pair => pair.join('=')) // 'a=5&b=1%2C2&c=2'\n  .join('&');\n}\n//# sourceMappingURL=normalize-path.js.map","/**\n * WordPress dependencies\n */\nimport { addQueryArgs, getQueryArgs, normalizePath } from '@wordpress/url';\n/**\n * @param {Record<string, any>} preloadedData\n * @return {import('../types').APIFetchMiddleware} Preloading middleware.\n */\n\nfunction createPreloadingMiddleware(preloadedData) {\n  const cache = Object.fromEntries(Object.entries(preloadedData).map(([path, data]) => [normalizePath(path), data]));\n  return (options, next) => {\n    const {\n      parse = true\n    } = options;\n    /** @type {string | void} */\n\n    let rawPath = options.path;\n\n    if (!rawPath && options.url) {\n      const {\n        rest_route: pathFromQuery,\n        ...queryArgs\n      } = getQueryArgs(options.url);\n\n      if (typeof pathFromQuery === 'string') {\n        rawPath = addQueryArgs(pathFromQuery, queryArgs);\n      }\n    }\n\n    if (typeof rawPath !== 'string') {\n      return next(options);\n    }\n\n    const method = options.method || 'GET';\n    const path = normalizePath(rawPath);\n\n    if ('GET' === method && cache[path]) {\n      const cacheData = cache[path]; // Unsetting the cache key ensures that the data is only used a single time.\n\n      delete cache[path];\n      return prepareResponse(cacheData, !!parse);\n    } else if ('OPTIONS' === method && cache[method] && cache[method][path]) {\n      const cacheData = cache[method][path]; // Unsetting the cache key ensures that the data is only used a single time.\n\n      delete cache[method][path];\n      return prepareResponse(cacheData, !!parse);\n    }\n\n    return next(options);\n  };\n}\n/**\n * This is a helper function that sends a success response.\n *\n * @param {Record<string, any>} responseData\n * @param {boolean}             parse\n * @return {Promise<any>} Promise with the response.\n */\n\n\nfunction prepareResponse(responseData, parse) {\n  return Promise.resolve(parse ? responseData.body : new window.Response(JSON.stringify(responseData.body), {\n    status: 200,\n    statusText: 'OK',\n    headers: responseData.headers\n  }));\n}\n\nexport default createPreloadingMiddleware;\n//# sourceMappingURL=preloading.js.map","/**\n * Internal dependencies\n */\nimport namespaceAndEndpointMiddleware from './namespace-endpoint';\n/**\n * @param {string} rootURL\n * @return {import('../types').APIFetchMiddleware} Root URL middleware.\n */\n\nconst createRootURLMiddleware = rootURL => (options, next) => {\n  return namespaceAndEndpointMiddleware(options, optionsWithPath => {\n    let url = optionsWithPath.url;\n    let path = optionsWithPath.path;\n    let apiRoot;\n\n    if (typeof path === 'string') {\n      apiRoot = rootURL;\n\n      if (-1 !== rootURL.indexOf('?')) {\n        path = path.replace('?', '&');\n      }\n\n      path = path.replace(/^\\//, ''); // API root may already include query parameter prefix if site is\n      // configured to use plain permalinks.\n\n      if ('string' === typeof apiRoot && -1 !== apiRoot.indexOf('?')) {\n        path = path.replace('?', '&');\n      }\n\n      url = apiRoot + path;\n    }\n\n    return next({ ...optionsWithPath,\n      url\n    });\n  });\n};\n\nexport default createRootURLMiddleware;\n//# sourceMappingURL=root-url.js.map","/**\n * WordPress dependencies\n */\nimport { addQueryArgs, hasQueryArg } from '@wordpress/url';\n/**\n * This appends a `theme_preview` parameter to the REST API request URL if\n * the admin URL contains a `theme` GET parameter.\n *\n * @param {Record<string, any>} themePath\n * @return {import('../types').APIFetchMiddleware} Preloading middleware.\n */\n\nconst createThemePreviewMiddleware = themePath => (options, next) => {\n  if (typeof options.url === 'string' && !hasQueryArg(options.url, 'theme_preview')) {\n    options.url = addQueryArgs(options.url, {\n      theme_preview: themePath\n    });\n  }\n\n  if (typeof options.path === 'string' && !hasQueryArg(options.path, 'theme_preview')) {\n    options.path = addQueryArgs(options.path, {\n      theme_preview: themePath\n    });\n  }\n\n  return next(options);\n};\n\nexport default createThemePreviewMiddleware;\n//# sourceMappingURL=theme-preview.js.map","/**\n * WordPress dependencies\n */\nimport { addQueryArgs, hasQueryArg } from '@wordpress/url';\n/**\n * @type {import('../types').APIFetchMiddleware}\n */\n\nconst userLocaleMiddleware = (options, next) => {\n  if (typeof options.url === 'string' && !hasQueryArg(options.url, '_locale')) {\n    options.url = addQueryArgs(options.url, {\n      _locale: 'user'\n    });\n  }\n\n  if (typeof options.path === 'string' && !hasQueryArg(options.path, '_locale')) {\n    options.path = addQueryArgs(options.path, {\n      _locale: 'user'\n    });\n  }\n\n  return next(options);\n};\n\nexport default userLocaleMiddleware;\n//# sourceMappingURL=user-locale.js.map","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n/**\n * Parses the apiFetch response.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n *\n * @return {Promise<any> | null | Response} Parsed response.\n */\n\nconst parseResponse = (response, shouldParseResponse = true) => {\n  if (shouldParseResponse) {\n    if (response.status === 204) {\n      return null;\n    }\n\n    return response.json ? response.json() : Promise.reject(response);\n  }\n\n  return response;\n};\n/**\n * Calls the `json` function on the Response, throwing an error if the response\n * doesn't have a json function or if parsing the json itself fails.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response.\n */\n\n\nconst parseJsonAndNormalizeError = response => {\n  const invalidJsonError = {\n    code: 'invalid_json',\n    message: __('The response is not a valid JSON response.')\n  };\n\n  if (!response || !response.json) {\n    throw invalidJsonError;\n  }\n\n  return response.json().catch(() => {\n    throw invalidJsonError;\n  });\n};\n/**\n * Parses the apiFetch response properly and normalize response errors.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n *\n * @return {Promise<any>} Parsed response.\n */\n\n\nexport const parseResponseAndNormalizeError = (response, shouldParseResponse = true) => {\n  return Promise.resolve(parseResponse(response, shouldParseResponse)).catch(res => parseAndThrowError(res, shouldParseResponse));\n};\n/**\n * Parses a response, throwing an error if parsing the response fails.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n * @return {Promise<any>} Parsed response.\n */\n\nexport function parseAndThrowError(response, shouldParseResponse = true) {\n  if (!shouldParseResponse) {\n    throw response;\n  }\n\n  return parseJsonAndNormalizeError(response).then(error => {\n    const unknownError = {\n      code: 'unknown_error',\n      message: __('An unknown error occurred.')\n    };\n    throw error || unknownError;\n  });\n}\n//# sourceMappingURL=response.js.map","/**\n * Validate a namespace string.\n *\n * @param {string} namespace The namespace to validate - should take the form\n *                           `vendor/plugin/function`.\n *\n * @return {boolean} Whether the namespace is valid.\n */\nfunction validateNamespace(namespace) {\n  if ('string' !== typeof namespace || '' === namespace) {\n    // eslint-disable-next-line no-console\n    console.error('The namespace must be a non-empty string.');\n    return false;\n  }\n\n  if (!/^[a-zA-Z][a-zA-Z0-9_.\\-\\/]*$/.test(namespace)) {\n    // eslint-disable-next-line no-console\n    console.error('The namespace can only contain numbers, letters, dashes, periods, underscores and slashes.');\n    return false;\n  }\n\n  return true;\n}\n\nexport default validateNamespace;\n//# sourceMappingURL=validateNamespace.js.map","/**\n * Validate a hookName string.\n *\n * @param {string} hookName The hook name to validate. Should be a non empty string containing\n *                          only numbers, letters, dashes, periods and underscores. Also,\n *                          the hook name cannot begin with `__`.\n *\n * @return {boolean} Whether the hook name is valid.\n */\nfunction validateHookName(hookName) {\n  if ('string' !== typeof hookName || '' === hookName) {\n    // eslint-disable-next-line no-console\n    console.error('The hook name must be a non-empty string.');\n    return false;\n  }\n\n  if (/^__/.test(hookName)) {\n    // eslint-disable-next-line no-console\n    console.error('The hook name cannot begin with `__`.');\n    return false;\n  }\n\n  if (!/^[a-zA-Z][a-zA-Z0-9_.-]*$/.test(hookName)) {\n    // eslint-disable-next-line no-console\n    console.error('The hook name can only contain numbers, letters, dashes, periods and underscores.');\n    return false;\n  }\n\n  return true;\n}\n\nexport default validateHookName;\n//# sourceMappingURL=validateHookName.js.map","/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n/**\n * @callback AddHook\n *\n * Adds the hook to the appropriate hooks container.\n *\n * @param {string}               hookName      Name of hook to add\n * @param {string}               namespace     The unique namespace identifying the callback in the form `vendor/plugin/function`.\n * @param {import('.').Callback} callback      Function to call when the hook is run\n * @param {number}               [priority=10] Priority of this hook\n */\n\n/**\n * Returns a function which, when invoked, will add a hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {AddHook} Function that adds a new hook.\n */\n\nfunction createAddHook(hooks, storeKey) {\n  return function addHook(hookName, namespace, callback, priority = 10) {\n    const hooksStore = hooks[storeKey];\n\n    if (!validateHookName(hookName)) {\n      return;\n    }\n\n    if (!validateNamespace(namespace)) {\n      return;\n    }\n\n    if ('function' !== typeof callback) {\n      // eslint-disable-next-line no-console\n      console.error('The hook callback must be a function.');\n      return;\n    } // Validate numeric priority\n\n\n    if ('number' !== typeof priority) {\n      // eslint-disable-next-line no-console\n      console.error('If specified, the hook priority must be a number.');\n      return;\n    }\n\n    const handler = {\n      callback,\n      priority,\n      namespace\n    };\n\n    if (hooksStore[hookName]) {\n      // Find the correct insert index of the new hook.\n      const handlers = hooksStore[hookName].handlers;\n      /** @type {number} */\n\n      let i;\n\n      for (i = handlers.length; i > 0; i--) {\n        if (priority >= handlers[i - 1].priority) {\n          break;\n        }\n      }\n\n      if (i === handlers.length) {\n        // If append, operate via direct assignment.\n        handlers[i] = handler;\n      } else {\n        // Otherwise, insert before index via splice.\n        handlers.splice(i, 0, handler);\n      } // We may also be currently executing this hook.  If the callback\n      // we're adding would come after the current callback, there's no\n      // problem; otherwise we need to increase the execution index of\n      // any other runs by 1 to account for the added element.\n\n\n      hooksStore.__current.forEach(hookInfo => {\n        if (hookInfo.name === hookName && hookInfo.currentIndex >= i) {\n          hookInfo.currentIndex++;\n        }\n      });\n    } else {\n      // This is the first hook of its type.\n      hooksStore[hookName] = {\n        handlers: [handler],\n        runs: 0\n      };\n    }\n\n    if (hookName !== 'hookAdded') {\n      hooks.doAction('hookAdded', hookName, namespace, callback, priority);\n    }\n  };\n}\n\nexport default createAddHook;\n//# sourceMappingURL=createAddHook.js.map","/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n/**\n * @callback RemoveHook\n * Removes the specified callback (or all callbacks) from the hook with a given hookName\n * and namespace.\n *\n * @param {string} hookName  The name of the hook to modify.\n * @param {string} namespace The unique namespace identifying the callback in the\n *                           form `vendor/plugin/function`.\n *\n * @return {number | undefined} The number of callbacks removed.\n */\n\n/**\n * Returns a function which, when invoked, will remove a specified hook or all\n * hooks by the given name.\n *\n * @param {import('.').Hooks}    hooks             Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [removeAll=false] Whether to remove all callbacks for a hookName,\n *                                                 without regard to namespace. Used to create\n *                                                 `removeAll*` functions.\n *\n * @return {RemoveHook} Function that removes hooks.\n */\n\nfunction createRemoveHook(hooks, storeKey, removeAll = false) {\n  return function removeHook(hookName, namespace) {\n    const hooksStore = hooks[storeKey];\n\n    if (!validateHookName(hookName)) {\n      return;\n    }\n\n    if (!removeAll && !validateNamespace(namespace)) {\n      return;\n    } // Bail if no hooks exist by this name.\n\n\n    if (!hooksStore[hookName]) {\n      return 0;\n    }\n\n    let handlersRemoved = 0;\n\n    if (removeAll) {\n      handlersRemoved = hooksStore[hookName].handlers.length;\n      hooksStore[hookName] = {\n        runs: hooksStore[hookName].runs,\n        handlers: []\n      };\n    } else {\n      // Try to find the specified callback to remove.\n      const handlers = hooksStore[hookName].handlers;\n\n      for (let i = handlers.length - 1; i >= 0; i--) {\n        if (handlers[i].namespace === namespace) {\n          handlers.splice(i, 1);\n          handlersRemoved++; // This callback may also be part of a hook that is\n          // currently executing.  If the callback we're removing\n          // comes after the current callback, there's no problem;\n          // otherwise we need to decrease the execution index of any\n          // other runs by 1 to account for the removed element.\n\n          hooksStore.__current.forEach(hookInfo => {\n            if (hookInfo.name === hookName && hookInfo.currentIndex >= i) {\n              hookInfo.currentIndex--;\n            }\n          });\n        }\n      }\n    }\n\n    if (hookName !== 'hookRemoved') {\n      hooks.doAction('hookRemoved', hookName, namespace);\n    }\n\n    return handlersRemoved;\n  };\n}\n\nexport default createRemoveHook;\n//# sourceMappingURL=createRemoveHook.js.map","/**\n * @callback HasHook\n *\n * Returns whether any handlers are attached for the given hookName and optional namespace.\n *\n * @param {string} hookName    The name of the hook to check for.\n * @param {string} [namespace] Optional. The unique namespace identifying the callback\n *                             in the form `vendor/plugin/function`.\n *\n * @return {boolean} Whether there are handlers that are attached to the given hook.\n */\n\n/**\n * Returns a function which, when invoked, will return whether any handlers are\n * attached to a particular hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {HasHook} Function that returns whether any handlers are\n *                   attached to a particular hook and optional namespace.\n */\nfunction createHasHook(hooks, storeKey) {\n  return function hasHook(hookName, namespace) {\n    const hooksStore = hooks[storeKey]; // Use the namespace if provided.\n\n    if ('undefined' !== typeof namespace) {\n      return hookName in hooksStore && hooksStore[hookName].handlers.some(hook => hook.namespace === namespace);\n    }\n\n    return hookName in hooksStore;\n  };\n}\n\nexport default createHasHook;\n//# sourceMappingURL=createHasHook.js.map","/**\n * Returns a function which, when invoked, will execute all callbacks\n * registered to a hook of the specified type, optionally returning the final\n * value of the call chain.\n *\n * @param {import('.').Hooks}    hooks                  Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [returnFirstArg=false] Whether each hook callback is expected to\n *                                                      return its first argument.\n *\n * @return {(hookName:string, ...args: unknown[]) => unknown} Function that runs hook callbacks.\n */\nfunction createRunHook(hooks, storeKey, returnFirstArg = false) {\n  return function runHooks(hookName, ...args) {\n    const hooksStore = hooks[storeKey];\n\n    if (!hooksStore[hookName]) {\n      hooksStore[hookName] = {\n        handlers: [],\n        runs: 0\n      };\n    }\n\n    hooksStore[hookName].runs++;\n    const handlers = hooksStore[hookName].handlers; // The following code is stripped from production builds.\n\n    if ('production' !== process.env.NODE_ENV) {\n      // Handle any 'all' hooks registered.\n      if ('hookAdded' !== hookName && hooksStore.all) {\n        handlers.push(...hooksStore.all.handlers);\n      }\n    }\n\n    if (!handlers || !handlers.length) {\n      return returnFirstArg ? args[0] : undefined;\n    }\n\n    const hookInfo = {\n      name: hookName,\n      currentIndex: 0\n    };\n\n    hooksStore.__current.push(hookInfo);\n\n    while (hookInfo.currentIndex < handlers.length) {\n      const handler = handlers[hookInfo.currentIndex];\n      const result = handler.callback.apply(null, args);\n\n      if (returnFirstArg) {\n        args[0] = result;\n      }\n\n      hookInfo.currentIndex++;\n    }\n\n    hooksStore.__current.pop();\n\n    if (returnFirstArg) {\n      return args[0];\n    }\n  };\n}\n\nexport default createRunHook;\n//# sourceMappingURL=createRunHook.js.map","/**\n * Returns a function which, when invoked, will return the name of the\n * currently running hook, or `null` if no hook of the given type is currently\n * running.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {() => string | null} Function that returns the current hook name or null.\n */\nfunction createCurrentHook(hooks, storeKey) {\n  return function currentHook() {\n    var _hooksStore$__current;\n\n    const hooksStore = hooks[storeKey];\n    return (_hooksStore$__current = hooksStore.__current[hooksStore.__current.length - 1]?.name) !== null && _hooksStore$__current !== void 0 ? _hooksStore$__current : null;\n  };\n}\n\nexport default createCurrentHook;\n//# sourceMappingURL=createCurrentHook.js.map","/**\n * @callback DoingHook\n * Returns whether a hook is currently being executed.\n *\n * @param {string} [hookName] The name of the hook to check for.  If\n *                            omitted, will check for any hook being executed.\n *\n * @return {boolean} Whether the hook is being executed.\n */\n\n/**\n * Returns a function which, when invoked, will return whether a hook is\n * currently being executed.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DoingHook} Function that returns whether a hook is currently\n *                     being executed.\n */\nfunction createDoingHook(hooks, storeKey) {\n  return function doingHook(hookName) {\n    const hooksStore = hooks[storeKey]; // If the hookName was not passed, check for any current hook.\n\n    if ('undefined' === typeof hookName) {\n      return 'undefined' !== typeof hooksStore.__current[0];\n    } // Return the __current hook.\n\n\n    return hooksStore.__current[0] ? hookName === hooksStore.__current[0].name : false;\n  };\n}\n\nexport default createDoingHook;\n//# sourceMappingURL=createDoingHook.js.map","/**\n * Internal dependencies\n */\nimport validateHookName from './validateHookName.js';\n/**\n * @callback DidHook\n *\n * Returns the number of times an action has been fired.\n *\n * @param {string} hookName The hook name to check.\n *\n * @return {number | undefined} The number of times the hook has run.\n */\n\n/**\n * Returns a function which, when invoked, will return the number of times a\n * hook has been called.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DidHook} Function that returns a hook's call count.\n */\n\nfunction createDidHook(hooks, storeKey) {\n  return function didHook(hookName) {\n    const hooksStore = hooks[storeKey];\n\n    if (!validateHookName(hookName)) {\n      return;\n    }\n\n    return hooksStore[hookName] && hooksStore[hookName].runs ? hooksStore[hookName].runs : 0;\n  };\n}\n\nexport default createDidHook;\n//# sourceMappingURL=createDidHook.js.map","/**\n * Internal dependencies\n */\nimport createAddHook from './createAddHook';\nimport createRemoveHook from './createRemoveHook';\nimport createHasHook from './createHasHook';\nimport createRunHook from './createRunHook';\nimport createCurrentHook from './createCurrentHook';\nimport createDoingHook from './createDoingHook';\nimport createDidHook from './createDidHook';\n/**\n * Internal class for constructing hooks. Use `createHooks()` function\n *\n * Note, it is necessary to expose this class to make its type public.\n *\n * @private\n */\n\nexport class _Hooks {\n  constructor() {\n    /** @type {import('.').Store} actions */\n    this.actions = Object.create(null);\n    this.actions.__current = [];\n    /** @type {import('.').Store} filters */\n\n    this.filters = Object.create(null);\n    this.filters.__current = [];\n    this.addAction = createAddHook(this, 'actions');\n    this.addFilter = createAddHook(this, 'filters');\n    this.removeAction = createRemoveHook(this, 'actions');\n    this.removeFilter = createRemoveHook(this, 'filters');\n    this.hasAction = createHasHook(this, 'actions');\n    this.hasFilter = createHasHook(this, 'filters');\n    this.removeAllActions = createRemoveHook(this, 'actions', true);\n    this.removeAllFilters = createRemoveHook(this, 'filters', true);\n    this.doAction = createRunHook(this, 'actions');\n    this.applyFilters = createRunHook(this, 'filters', true);\n    this.currentAction = createCurrentHook(this, 'actions');\n    this.currentFilter = createCurrentHook(this, 'filters');\n    this.doingAction = createDoingHook(this, 'actions');\n    this.doingFilter = createDoingHook(this, 'filters');\n    this.didAction = createDidHook(this, 'actions');\n    this.didFilter = createDidHook(this, 'filters');\n  }\n\n}\n/** @typedef {_Hooks} Hooks */\n\n/**\n * Returns an instance of the hooks object.\n *\n * @return {Hooks} A Hooks instance.\n */\n\nfunction createHooks() {\n  return new _Hooks();\n}\n\nexport default createHooks;\n//# sourceMappingURL=createHooks.js.map","var PRECEDENCE, OPENERS, TERMINATORS, PATTERN;\n\n/**\n * Operator precedence mapping.\n *\n * @type {Object}\n */\nPRECEDENCE = {\n\t'(': 9,\n\t'!': 8,\n\t'*': 7,\n\t'/': 7,\n\t'%': 7,\n\t'+': 6,\n\t'-': 6,\n\t'<': 5,\n\t'<=': 5,\n\t'>': 5,\n\t'>=': 5,\n\t'==': 4,\n\t'!=': 4,\n\t'&&': 3,\n\t'||': 2,\n\t'?': 1,\n\t'?:': 1,\n};\n\n/**\n * Characters which signal pair opening, to be terminated by terminators.\n *\n * @type {string[]}\n */\nOPENERS = [ '(', '?' ];\n\n/**\n * Characters which signal pair termination, the value an array with the\n * opener as its first member. The second member is an optional operator\n * replacement to push to the stack.\n *\n * @type {string[]}\n */\nTERMINATORS = {\n\t')': [ '(' ],\n\t':': [ '?', '?:' ],\n};\n\n/**\n * Pattern matching operators and openers.\n *\n * @type {RegExp}\n */\nPATTERN = /<=|>=|==|!=|&&|\\|\\||\\?:|\\(|!|\\*|\\/|%|\\+|-|<|>|\\?|\\)|:/;\n\n/**\n * Given a C expression, returns the equivalent postfix (Reverse Polish)\n * notation terms as an array.\n *\n * If a postfix string is desired, simply `.join( ' ' )` the result.\n *\n * @example\n *\n * ```js\n * import postfix from '@tannin/postfix';\n *\n * postfix( 'n > 1' );\n * // ⇒ [ 'n', '1', '>' ]\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {string[]} Postfix terms.\n */\nexport default function postfix( expression ) {\n\tvar terms = [],\n\t\tstack = [],\n\t\tmatch, operator, term, element;\n\n\twhile ( ( match = expression.match( PATTERN ) ) ) {\n\t\toperator = match[ 0 ];\n\n\t\t// Term is the string preceding the operator match. It may contain\n\t\t// whitespace, and may be empty (if operator is at beginning).\n\t\tterm = expression.substr( 0, match.index ).trim();\n\t\tif ( term ) {\n\t\t\tterms.push( term );\n\t\t}\n\n\t\twhile ( ( element = stack.pop() ) ) {\n\t\t\tif ( TERMINATORS[ operator ] ) {\n\t\t\t\tif ( TERMINATORS[ operator ][ 0 ] === element ) {\n\t\t\t\t\t// Substitution works here under assumption that because\n\t\t\t\t\t// the assigned operator will no longer be a terminator, it\n\t\t\t\t\t// will be pushed to the stack during the condition below.\n\t\t\t\t\toperator = TERMINATORS[ operator ][ 1 ] || operator;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if ( OPENERS.indexOf( element ) >= 0 || PRECEDENCE[ element ] < PRECEDENCE[ operator ] ) {\n\t\t\t\t// Push to stack if either an opener or when pop reveals an\n\t\t\t\t// element of lower precedence.\n\t\t\t\tstack.push( element );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// For each popped from stack, push to terms.\n\t\t\tterms.push( element );\n\t\t}\n\n\t\tif ( ! TERMINATORS[ operator ] ) {\n\t\t\tstack.push( operator );\n\t\t}\n\n\t\t// Slice matched fragment from expression to continue match.\n\t\texpression = expression.substr( match.index + operator.length );\n\t}\n\n\t// Push remainder of operand, if exists, to terms.\n\texpression = expression.trim();\n\tif ( expression ) {\n\t\tterms.push( expression );\n\t}\n\n\t// Pop remaining items from stack into terms.\n\treturn terms.concat( stack.reverse() );\n}\n","/**\n * Operator callback functions.\n *\n * @type {Object}\n */\nvar OPERATORS = {\n\t'!': function( a ) {\n\t\treturn ! a;\n\t},\n\t'*': function( a, b ) {\n\t\treturn a * b;\n\t},\n\t'/': function( a, b ) {\n\t\treturn a / b;\n\t},\n\t'%': function( a, b ) {\n\t\treturn a % b;\n\t},\n\t'+': function( a, b ) {\n\t\treturn a + b;\n\t},\n\t'-': function( a, b ) {\n\t\treturn a - b;\n\t},\n\t'<': function( a, b ) {\n\t\treturn a < b;\n\t},\n\t'<=': function( a, b ) {\n\t\treturn a <= b;\n\t},\n\t'>': function( a, b ) {\n\t\treturn a > b;\n\t},\n\t'>=': function( a, b ) {\n\t\treturn a >= b;\n\t},\n\t'==': function( a, b ) {\n\t\treturn a === b;\n\t},\n\t'!=': function( a, b ) {\n\t\treturn a !== b;\n\t},\n\t'&&': function( a, b ) {\n\t\treturn a && b;\n\t},\n\t'||': function( a, b ) {\n\t\treturn a || b;\n\t},\n\t'?:': function( a, b, c ) {\n\t\tif ( a ) {\n\t\t\tthrow b;\n\t\t}\n\n\t\treturn c;\n\t},\n};\n\n/**\n * Given an array of postfix terms and operand variables, returns the result of\n * the postfix evaluation.\n *\n * @example\n *\n * ```js\n * import evaluate from '@tannin/evaluate';\n *\n * // 3 + 4 * 5 / 6 ⇒ '3 4 5 * 6 / +'\n * const terms = [ '3', '4', '5', '*', '6', '/', '+' ];\n *\n * evaluate( terms, {} );\n * // ⇒ 6.333333333333334\n * ```\n *\n * @param {string[]} postfix   Postfix terms.\n * @param {Object}   variables Operand variables.\n *\n * @return {*} Result of evaluation.\n */\nexport default function evaluate( postfix, variables ) {\n\tvar stack = [],\n\t\ti, j, args, getOperatorResult, term, value;\n\n\tfor ( i = 0; i < postfix.length; i++ ) {\n\t\tterm = postfix[ i ];\n\n\t\tgetOperatorResult = OPERATORS[ term ];\n\t\tif ( getOperatorResult ) {\n\t\t\t// Pop from stack by number of function arguments.\n\t\t\tj = getOperatorResult.length;\n\t\t\targs = Array( j );\n\t\t\twhile ( j-- ) {\n\t\t\t\targs[ j ] = stack.pop();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvalue = getOperatorResult.apply( null, args );\n\t\t\t} catch ( earlyReturn ) {\n\t\t\t\treturn earlyReturn;\n\t\t\t}\n\t\t} else if ( variables.hasOwnProperty( term ) ) {\n\t\t\tvalue = variables[ term ];\n\t\t} else {\n\t\t\tvalue = +term;\n\t\t}\n\n\t\tstack.push( value );\n\t}\n\n\treturn stack[ 0 ];\n}\n","import postfix from '@tannin/postfix';\nimport evaluate from '@tannin/evaluate';\n\n/**\n * Given a C expression, returns a function which can be called to evaluate its\n * result.\n *\n * @example\n *\n * ```js\n * import compile from '@tannin/compile';\n *\n * const evaluate = compile( 'n > 1' );\n *\n * evaluate( { n: 2 } );\n * // ⇒ true\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {(variables?:{[variable:string]:*})=>*} Compiled evaluator.\n */\nexport default function compile( expression ) {\n\tvar terms = postfix( expression );\n\n\treturn function( variables ) {\n\t\treturn evaluate( terms, variables );\n\t};\n}\n","import pluralForms from '@tannin/plural-forms';\n\n/**\n * Tannin constructor options.\n *\n * @typedef {Object} TanninOptions\n *\n * @property {string}   [contextDelimiter] Joiner in string lookup with context.\n * @property {Function} [onMissingKey]     Callback to invoke when key missing.\n */\n\n/**\n * Domain metadata.\n *\n * @typedef {Object} TanninDomainMetadata\n *\n * @property {string}            [domain]       Domain name.\n * @property {string}            [lang]         Language code.\n * @property {(string|Function)} [plural_forms] Plural forms expression or\n *                                              function evaluator.\n */\n\n/**\n * Domain translation pair respectively representing the singular and plural\n * translation.\n *\n * @typedef {[string,string]} TanninTranslation\n */\n\n/**\n * Locale data domain. The key is used as reference for lookup, the value an\n * array of two string entries respectively representing the singular and plural\n * translation.\n *\n * @typedef {{[key:string]:TanninDomainMetadata|TanninTranslation,'':TanninDomainMetadata|TanninTranslation}} TanninLocaleDomain\n */\n\n/**\n * Jed-formatted locale data.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @typedef {{[domain:string]:TanninLocaleDomain}} TanninLocaleData\n */\n\n/**\n * Default Tannin constructor options.\n *\n * @type {TanninOptions}\n */\nvar DEFAULT_OPTIONS = {\n\tcontextDelimiter: '\\u0004',\n\tonMissingKey: null,\n};\n\n/**\n * Given a specific locale data's config `plural_forms` value, returns the\n * expression.\n *\n * @example\n *\n * ```\n * getPluralExpression( 'nplurals=2; plural=(n != 1);' ) === '(n != 1)'\n * ```\n *\n * @param {string} pf Locale data plural forms.\n *\n * @return {string} Plural forms expression.\n */\nfunction getPluralExpression( pf ) {\n\tvar parts, i, part;\n\n\tparts = pf.split( ';' );\n\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\tpart = parts[ i ].trim();\n\t\tif ( part.indexOf( 'plural=' ) === 0 ) {\n\t\t\treturn part.substr( 7 );\n\t\t}\n\t}\n}\n\n/**\n * Tannin constructor.\n *\n * @class\n *\n * @param {TanninLocaleData} data      Jed-formatted locale data.\n * @param {TanninOptions}    [options] Tannin options.\n */\nexport default function Tannin( data, options ) {\n\tvar key;\n\n\t/**\n\t * Jed-formatted locale data.\n\t *\n\t * @name Tannin#data\n\t * @type {TanninLocaleData}\n\t */\n\tthis.data = data;\n\n\t/**\n\t * Plural forms function cache, keyed by plural forms string.\n\t *\n\t * @name Tannin#pluralForms\n\t * @type {Object<string,Function>}\n\t */\n\tthis.pluralForms = {};\n\n\t/**\n\t * Effective options for instance, including defaults.\n\t *\n\t * @name Tannin#options\n\t * @type {TanninOptions}\n\t */\n\tthis.options = {};\n\n\tfor ( key in DEFAULT_OPTIONS ) {\n\t\tthis.options[ key ] = options !== undefined && key in options\n\t\t\t? options[ key ]\n\t\t\t: DEFAULT_OPTIONS[ key ];\n\t}\n}\n\n/**\n * Returns the plural form index for the given domain and value.\n *\n * @param {string} domain Domain on which to calculate plural form.\n * @param {number} n      Value for which plural form is to be calculated.\n *\n * @return {number} Plural form index.\n */\nTannin.prototype.getPluralForm = function( domain, n ) {\n\tvar getPluralForm = this.pluralForms[ domain ],\n\t\tconfig, plural, pf;\n\n\tif ( ! getPluralForm ) {\n\t\tconfig = this.data[ domain ][ '' ];\n\n\t\tpf = (\n\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t// @ts-ignore\n\t\t\tconfig.plural_forms\n\t\t);\n\n\t\tif ( typeof pf !== 'function' ) {\n\t\t\tplural = getPluralExpression(\n\t\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t\t// @ts-ignore\n\t\t\t\tconfig.plural_forms\n\t\t\t);\n\n\t\t\tpf = pluralForms( plural );\n\t\t}\n\n\t\tgetPluralForm = this.pluralForms[ domain ] = pf;\n\t}\n\n\treturn getPluralForm( n );\n};\n\n/**\n * Translate a string.\n *\n * @param {string}      domain   Translation domain.\n * @param {string|void} context  Context distinguishing terms of the same name.\n * @param {string}      singular Primary key for translation lookup.\n * @param {string=}     plural   Fallback value used for non-zero plural\n *                               form index.\n * @param {number=}     n        Value to use in calculating plural form.\n *\n * @return {string} Translated string.\n */\nTannin.prototype.dcnpgettext = function( domain, context, singular, plural, n ) {\n\tvar index, key, entry;\n\n\tif ( n === undefined ) {\n\t\t// Default to singular.\n\t\tindex = 0;\n\t} else {\n\t\t// Find index by evaluating plural form for value.\n\t\tindex = this.getPluralForm( domain, n );\n\t}\n\n\tkey = singular;\n\n\t// If provided, context is prepended to key with delimiter.\n\tif ( context ) {\n\t\tkey = context + this.options.contextDelimiter + singular;\n\t}\n\n\tentry = this.data[ domain ][ key ];\n\n\t// Verify not only that entry exists, but that the intended index is within\n\t// range and non-empty.\n\tif ( entry && entry[ index ] ) {\n\t\treturn entry[ index ];\n\t}\n\n\tif ( this.options.onMissingKey ) {\n\t\tthis.options.onMissingKey( singular, domain );\n\t}\n\n\t// If entry not found, fall back to singular vs. plural with zero index\n\t// representing the singular value.\n\treturn index === 0 ? singular : plural;\n};\n","import compile from '@tannin/compile';\n\n/**\n * Given a C expression, returns a function which, when called with a value,\n * evaluates the result with the value assumed to be the \"n\" variable of the\n * expression. The result will be coerced to its numeric equivalent.\n *\n * @param {string} expression C expression.\n *\n * @return {Function} Evaluator function.\n */\nexport default function pluralForms( expression ) {\n\tvar evaluate = compile( expression );\n\n\treturn function( n ) {\n\t\treturn +evaluate( { n: n } );\n\t};\n}\n","/**\n * External dependencies\n */\nimport Tannin from 'tannin';\n/**\n * @typedef {Record<string,any>} LocaleData\n */\n\n/**\n * Default locale data to use for Tannin domain when not otherwise provided.\n * Assumes an English plural forms expression.\n *\n * @type {LocaleData}\n */\n\nconst DEFAULT_LOCALE_DATA = {\n  '': {\n    /** @param {number} n */\n    plural_forms(n) {\n      return n === 1 ? 0 : 1;\n    }\n\n  }\n};\n/*\n * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,\n * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.\n */\n\nconst I18N_HOOK_REGEXP = /^i18n\\.(n?gettext|has_translation)(_|$)/;\n/**\n * @typedef {(domain?: string) => LocaleData} GetLocaleData\n *\n * Returns locale data by domain in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will overwrite the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} AddLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will also merge the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData\n *\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/** @typedef {() => void} SubscribeCallback */\n\n/** @typedef {() => void} UnsubscribeCallback */\n\n/**\n * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe\n *\n * Subscribes to changes of locale data\n */\n\n/**\n * @typedef {(domain?: string) => string} GetFilterDomain\n * Retrieve the domain to use when calling domain-specific filters.\n */\n\n/**\n * @typedef {(text: string, domain?: string) => string} __\n *\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n */\n\n/**\n * @typedef {(text: string, context: string, domain?: string) => string} _x\n *\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n */\n\n/**\n * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n */\n\n/**\n * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n */\n\n/**\n * @typedef {() => boolean} IsRtl\n *\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n */\n\n/**\n * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation\n *\n * Check if there is a translation for a given string in singular form.\n */\n\n/** @typedef {import('@wordpress/hooks').Hooks} Hooks */\n\n/**\n * An i18n instance\n *\n * @typedef I18n\n * @property {GetLocaleData}   getLocaleData   Returns locale data by domain in a Jed-formatted JSON object shape.\n * @property {SetLocaleData}   setLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will overwrite the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {AddLocaleData}   addLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will also merge the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified\n *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n * @property {Subscribe}       subscribe       Subscribes to changes of Tannin locale data.\n * @property {__}              __              Retrieve the translation of text.\n * @property {_x}              _x              Retrieve translated string with gettext context.\n * @property {_n}              _n              Translates and retrieves the singular or plural form based on the supplied\n *                                             number.\n * @property {_nx}             _nx             Translates and retrieves the singular or plural form based on the supplied\n *                                             number, with gettext context.\n * @property {IsRtl}           isRTL           Check if current locale is RTL.\n * @property {HasTranslation}  hasTranslation  Check if there is a translation for a given string.\n */\n\n/**\n * Create an i18n instance\n *\n * @param {LocaleData} [initialData]   Locale data configuration.\n * @param {string}     [initialDomain] Domain for which configuration applies.\n * @param {Hooks}      [hooks]         Hooks implementation.\n *\n * @return {I18n} I18n instance.\n */\n\nexport const createI18n = (initialData, initialDomain, hooks) => {\n  /**\n   * The underlying instance of Tannin to which exported functions interface.\n   *\n   * @type {Tannin}\n   */\n  const tannin = new Tannin({});\n  const listeners = new Set();\n\n  const notifyListeners = () => {\n    listeners.forEach(listener => listener());\n  };\n  /**\n   * Subscribe to changes of locale data.\n   *\n   * @param {SubscribeCallback} callback Subscription callback.\n   * @return {UnsubscribeCallback} Unsubscribe callback.\n   */\n\n\n  const subscribe = callback => {\n    listeners.add(callback);\n    return () => listeners.delete(callback);\n  };\n  /** @type {GetLocaleData} */\n\n\n  const getLocaleData = (domain = 'default') => tannin.data[domain];\n  /**\n   * @param {LocaleData} [data]\n   * @param {string}     [domain]\n   */\n\n\n  const doSetLocaleData = (data, domain = 'default') => {\n    tannin.data[domain] = { ...tannin.data[domain],\n      ...data\n    }; // Populate default domain configuration (supported locale date which omits\n    // a plural forms expression).\n\n    tannin.data[domain][''] = { ...DEFAULT_LOCALE_DATA[''],\n      ...tannin.data[domain]?.['']\n    }; // Clean up cached plural forms functions cache as it might be updated.\n\n    delete tannin.pluralForms[domain];\n  };\n  /** @type {SetLocaleData} */\n\n\n  const setLocaleData = (data, domain) => {\n    doSetLocaleData(data, domain);\n    notifyListeners();\n  };\n  /** @type {AddLocaleData} */\n\n\n  const addLocaleData = (data, domain = 'default') => {\n    tannin.data[domain] = { ...tannin.data[domain],\n      ...data,\n      // Populate default domain configuration (supported locale date which omits\n      // a plural forms expression).\n      '': { ...DEFAULT_LOCALE_DATA[''],\n        ...tannin.data[domain]?.[''],\n        ...data?.['']\n      }\n    }; // Clean up cached plural forms functions cache as it might be updated.\n\n    delete tannin.pluralForms[domain];\n    notifyListeners();\n  };\n  /** @type {ResetLocaleData} */\n\n\n  const resetLocaleData = (data, domain) => {\n    // Reset all current Tannin locale data.\n    tannin.data = {}; // Reset cached plural forms functions cache.\n\n    tannin.pluralForms = {};\n    setLocaleData(data, domain);\n  };\n  /**\n   * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not\n   * otherwise previously assigned.\n   *\n   * @param {string|undefined} domain   Domain to retrieve the translated text.\n   * @param {string|undefined} context  Context information for the translators.\n   * @param {string}           single   Text to translate if non-plural. Used as\n   *                                    fallback return value on a caught error.\n   * @param {string}           [plural] The text to be used if the number is\n   *                                    plural.\n   * @param {number}           [number] The number to compare against to use\n   *                                    either the singular or plural form.\n   *\n   * @return {string} The translated string.\n   */\n\n\n  const dcnpgettext = (domain = 'default', context, single, plural, number) => {\n    if (!tannin.data[domain]) {\n      // Use `doSetLocaleData` to set silently, without notifying listeners.\n      doSetLocaleData(undefined, domain);\n    }\n\n    return tannin.dcnpgettext(domain, context, single, plural, number);\n  };\n  /** @type {GetFilterDomain} */\n\n\n  const getFilterDomain = (domain = 'default') => domain;\n  /** @type {__} */\n\n\n  const __ = (text, domain) => {\n    let translation = dcnpgettext(domain, undefined, text);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters text with its translation.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} text        Text to translate.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.gettext', translation, text, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.gettext_' + getFilterDomain(domain), translation, text, domain)\n    );\n  };\n  /** @type {_x} */\n\n\n  const _x = (text, context, domain) => {\n    let translation = dcnpgettext(domain, context, text);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters text with its translation based on context information.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} text        Text to translate.\n     * @param {string} context     Context information for the translators.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.gettext_with_context', translation, text, context, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.gettext_with_context_' + getFilterDomain(domain), translation, text, context, domain)\n    );\n  };\n  /** @type {_n} */\n\n\n  const _n = (single, plural, number, domain) => {\n    let translation = dcnpgettext(domain, undefined, single, plural, number);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters the singular or plural form of a string.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} single      The text to be used if the number is singular.\n     * @param {string} plural      The text to be used if the number is plural.\n     * @param {string} number      The number to compare against to use either the singular or plural form.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.ngettext', translation, single, plural, number, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.ngettext_' + getFilterDomain(domain), translation, single, plural, number, domain)\n    );\n  };\n  /** @type {_nx} */\n\n\n  const _nx = (single, plural, number, context, domain) => {\n    let translation = dcnpgettext(domain, context, single, plural, number);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters the singular or plural form of a string with gettext context.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} single      The text to be used if the number is singular.\n     * @param {string} plural      The text to be used if the number is plural.\n     * @param {string} number      The number to compare against to use either the singular or plural form.\n     * @param {string} context     Context information for the translators.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.ngettext_with_context', translation, single, plural, number, context, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.ngettext_with_context_' + getFilterDomain(domain), translation, single, plural, number, context, domain)\n    );\n  };\n  /** @type {IsRtl} */\n\n\n  const isRTL = () => {\n    return 'rtl' === _x('ltr', 'text direction');\n  };\n  /** @type {HasTranslation} */\n\n\n  const hasTranslation = (single, context, domain) => {\n    const key = context ? context + '\\u0004' + single : single;\n    let result = !!tannin.data?.[domain !== null && domain !== void 0 ? domain : 'default']?.[key];\n\n    if (hooks) {\n      /**\n       * Filters the presence of a translation in the locale data.\n       *\n       * @param {boolean} hasTranslation Whether the translation is present or not..\n       * @param {string}  single         The singular form of the translated text (used as key in locale data)\n       * @param {string}  context        Context information for the translators.\n       * @param {string}  domain         Text domain. Unique identifier for retrieving translated strings.\n       */\n      result =\n      /** @type { boolean } */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.has_translation', result, single, context, domain);\n      result =\n      /** @type { boolean } */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.has_translation_' + getFilterDomain(domain), result, single, context, domain);\n    }\n\n    return result;\n  };\n\n  if (initialData) {\n    setLocaleData(initialData, initialDomain);\n  }\n\n  if (hooks) {\n    /**\n     * @param {string} hookName\n     */\n    const onHookAddedOrRemoved = hookName => {\n      if (I18N_HOOK_REGEXP.test(hookName)) {\n        notifyListeners();\n      }\n    };\n\n    hooks.addAction('hookAdded', 'core/i18n', onHookAddedOrRemoved);\n    hooks.addAction('hookRemoved', 'core/i18n', onHookAddedOrRemoved);\n  }\n\n  return {\n    getLocaleData,\n    setLocaleData,\n    addLocaleData,\n    resetLocaleData,\n    subscribe,\n    __,\n    _x,\n    _n,\n    _nx,\n    isRTL,\n    hasTranslation\n  };\n};\n//# sourceMappingURL=create-i18n.js.map","/**\n * Internal dependencies\n */\nimport { createI18n } from './create-i18n';\n/**\n * WordPress dependencies\n */\n\nimport { defaultHooks } from '@wordpress/hooks';\nconst i18n = createI18n(undefined, undefined, defaultHooks);\n/**\n * Default, singleton instance of `I18n`.\n */\n\nexport default i18n;\n/*\n * Comments in this file are duplicated from ./i18n due to\n * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722\n */\n\n/**\n * @typedef {import('./create-i18n').LocaleData} LocaleData\n * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback\n * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback\n */\n\n/**\n * Returns locale data by domain in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {string} [domain] Domain for which to get the data.\n * @return {LocaleData} Locale data.\n */\n\nexport const getLocaleData = i18n.getLocaleData.bind(i18n);\n/**\n * Merges locale data into the Tannin instance by domain. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\n\nexport const setLocaleData = i18n.setLocaleData.bind(i18n);\n/**\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\n\nexport const resetLocaleData = i18n.resetLocaleData.bind(i18n);\n/**\n * Subscribes to changes of locale data\n *\n * @param {SubscribeCallback} callback Subscription callback\n * @return {UnsubscribeCallback} Unsubscribe callback\n */\n\nexport const subscribe = i18n.subscribe.bind(i18n);\n/**\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n *\n * @param {string} text     Text to translate.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated text.\n */\n\nexport const __ = i18n.__.bind(i18n);\n/**\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n *\n * @param {string} text     Text to translate.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated context string without pipe.\n */\n\nexport const _x = i18n._x.bind(i18n);\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\n\nexport const _n = i18n._n.bind(i18n);\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\n\nexport const _nx = i18n._nx.bind(i18n);\n/**\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n *\n * @return {boolean} Whether locale is RTL.\n */\n\nexport const isRTL = i18n.isRTL.bind(i18n);\n/**\n * Check if there is a translation for a given string (in singular form).\n *\n * @param {string} single    Singular form of the string to look up.\n * @param {string} [context] Context information for the translators.\n * @param {string} [domain]  Domain to retrieve the translated text.\n * @return {boolean} Whether the translation exists or not.\n */\n\nexport const hasTranslation = i18n.hasTranslation.bind(i18n);\n//# sourceMappingURL=default-i18n.js.map","/**\n * Internal dependencies\n */\nimport { getQueryArgs } from './get-query-args';\nimport { buildQueryString } from './build-query-string';\n/**\n * Appends arguments as querystring to the provided URL. If the URL already\n * includes query arguments, the arguments are merged with (and take precedent\n * over) the existing set.\n *\n * @param {string} [url=''] URL to which arguments should be appended. If omitted,\n *                          only the resulting querystring is returned.\n * @param {Object} [args]   Query arguments to apply to URL.\n *\n * @example\n * ```js\n * const newURL = addQueryArgs( 'https://google.com', { q: 'test' } ); // https://google.com/?q=test\n * ```\n *\n * @return {string} URL with arguments applied.\n */\n\nexport function addQueryArgs(url = '', args) {\n  // If no arguments are to be appended, return original URL.\n  if (!args || !Object.keys(args).length) {\n    return url;\n  }\n\n  let baseUrl = url; // Determine whether URL already had query arguments.\n\n  const queryStringIndex = url.indexOf('?');\n\n  if (queryStringIndex !== -1) {\n    // Merge into existing query arguments.\n    args = Object.assign(getQueryArgs(url), args); // Change working base URL to omit previous query arguments.\n\n    baseUrl = baseUrl.substr(0, queryStringIndex);\n  }\n\n  return baseUrl + '?' + buildQueryString(args);\n}\n//# sourceMappingURL=add-query-args.js.map","/**\n * Generates URL-encoded query string using input query data.\n *\n * It is intended to behave equivalent as PHP's `http_build_query`, configured\n * with encoding type PHP_QUERY_RFC3986 (spaces as `%20`).\n *\n * @example\n * ```js\n * const queryString = buildQueryString( {\n *    simple: 'is ok',\n *    arrays: [ 'are', 'fine', 'too' ],\n *    objects: {\n *       evenNested: {\n *          ok: 'yes',\n *       },\n *    },\n * } );\n * // \"simple=is%20ok&arrays%5B0%5D=are&arrays%5B1%5D=fine&arrays%5B2%5D=too&objects%5BevenNested%5D%5Bok%5D=yes\"\n * ```\n *\n * @param {Record<string,*>} data Data to encode.\n *\n * @return {string} Query string.\n */\nexport function buildQueryString(data) {\n  let string = '';\n  const stack = Object.entries(data);\n  let pair;\n\n  while (pair = stack.shift()) {\n    let [key, value] = pair; // Support building deeply nested data, from array or object values.\n\n    const hasNestedData = Array.isArray(value) || value && value.constructor === Object;\n\n    if (hasNestedData) {\n      // Push array or object values onto the stack as composed of their\n      // original key and nested index or key, retaining order by a\n      // combination of Array#reverse and Array#unshift onto the stack.\n      const valuePairs = Object.entries(value).reverse();\n\n      for (const [member, memberValue] of valuePairs) {\n        stack.unshift([`${key}[${member}]`, memberValue]);\n      }\n    } else if (value !== undefined) {\n      // Null is treated as special case, equivalent to empty string.\n      if (value === null) {\n        value = '';\n      }\n\n      string += '&' + [key, value].map(encodeURIComponent).join('=');\n    }\n  } // Loop will concatenate with leading `&`, but it's only expected for all\n  // but the first query parameter. This strips the leading `&`, while still\n  // accounting for the case that the string may in-fact be empty.\n\n\n  return string.substr(1);\n}\n//# sourceMappingURL=build-query-string.js.map","/**\n * Safely decodes a URI component with `decodeURIComponent`. Returns the URI component unmodified if\n * `decodeURIComponent` throws an error.\n *\n * @param {string} uriComponent URI component to decode.\n *\n * @return {string} Decoded URI component if possible.\n */\nexport function safeDecodeURIComponent(uriComponent) {\n  try {\n    return decodeURIComponent(uriComponent);\n  } catch (uriComponentError) {\n    return uriComponent;\n  }\n}\n//# sourceMappingURL=safe-decode-uri-component.js.map","/**\n * Internal dependencies\n */\nimport { safeDecodeURIComponent } from './safe-decode-uri-component';\nimport { getQueryString } from './get-query-string';\n/** @typedef {import('./get-query-arg').QueryArgParsed} QueryArgParsed */\n\n/**\n * @typedef {Record<string,QueryArgParsed>} QueryArgs\n */\n\n/**\n * Sets a value in object deeply by a given array of path segments. Mutates the\n * object reference.\n *\n * @param {Record<string,*>} object Object in which to assign.\n * @param {string[]}         path   Path segment at which to set value.\n * @param {*}                value  Value to set.\n */\n\nfunction setPath(object, path, value) {\n  const length = path.length;\n  const lastIndex = length - 1;\n\n  for (let i = 0; i < length; i++) {\n    let key = path[i];\n\n    if (!key && Array.isArray(object)) {\n      // If key is empty string and next value is array, derive key from\n      // the current length of the array.\n      key = object.length.toString();\n    }\n\n    key = ['__proto__', 'constructor', 'prototype'].includes(key) ? key.toUpperCase() : key; // If the next key in the path is numeric (or empty string), it will be\n    // created as an array. Otherwise, it will be created as an object.\n\n    const isNextKeyArrayIndex = !isNaN(Number(path[i + 1]));\n    object[key] = i === lastIndex ? // If at end of path, assign the intended value.\n    value : // Otherwise, advance to the next object in the path, creating\n    // it if it does not yet exist.\n    object[key] || (isNextKeyArrayIndex ? [] : {});\n\n    if (Array.isArray(object[key]) && !isNextKeyArrayIndex) {\n      // If we current key is non-numeric, but the next value is an\n      // array, coerce the value to an object.\n      object[key] = { ...object[key]\n      };\n    } // Update working reference object to the next in the path.\n\n\n    object = object[key];\n  }\n}\n/**\n * Returns an object of query arguments of the given URL. If the given URL is\n * invalid or has no querystring, an empty object is returned.\n *\n * @param {string} url URL.\n *\n * @example\n * ```js\n * const foo = getQueryArgs( 'https://wordpress.org?foo=bar&bar=baz' );\n * // { \"foo\": \"bar\", \"bar\": \"baz\" }\n * ```\n *\n * @return {QueryArgs} Query args object.\n */\n\n\nexport function getQueryArgs(url) {\n  return (getQueryString(url) || '' // Normalize space encoding, accounting for PHP URL encoding\n  // corresponding to `application/x-www-form-urlencoded`.\n  //\n  // See: https://tools.ietf.org/html/rfc1866#section-8.2.1\n  ).replace(/\\+/g, '%20').split('&').reduce((accumulator, keyValue) => {\n    const [key, value = ''] = keyValue.split('=') // Filtering avoids decoding as `undefined` for value, where\n    // default is restored in destructuring assignment.\n    .filter(Boolean).map(safeDecodeURIComponent);\n\n    if (key) {\n      const segments = key.replace(/\\]/g, '').split('[');\n      setPath(accumulator, segments, value);\n    }\n\n    return accumulator;\n  }, Object.create(null));\n}\n//# sourceMappingURL=get-query-args.js.map","/**\n * Returns the query string part of the URL.\n *\n * @param {string} url The full URL.\n *\n * @example\n * ```js\n * const queryString = getQueryString( 'http://localhost:8080/this/is/a/test?query=true#fragment' ); // 'query=true'\n * ```\n *\n * @return {string|void} The query string part of the URL.\n */\nexport function getQueryString(url) {\n  let query;\n\n  try {\n    query = new URL(url, 'http://example.com').search.substring(1);\n  } catch (error) {}\n\n  if (query) {\n    return query;\n  }\n}\n//# sourceMappingURL=get-query-string.js.map","/**\n * Internal dependencies\n */\nimport { getQueryArg } from './get-query-arg';\n/**\n * Determines whether the URL contains a given query arg.\n *\n * @param {string} url URL.\n * @param {string} arg Query arg name.\n *\n * @example\n * ```js\n * const hasBar = hasQueryArg( 'https://wordpress.org?foo=bar&bar=baz', 'bar' ); // true\n * ```\n *\n * @return {boolean} Whether or not the URL contains the query arg.\n */\n\nexport function hasQueryArg(url, arg) {\n  return getQueryArg(url, arg) !== undefined;\n}\n//# sourceMappingURL=has-query-arg.js.map","/**\n * Internal dependencies\n */\nimport { getQueryArgs } from './get-query-args';\n/**\n * @typedef {{[key: string]: QueryArgParsed}} QueryArgObject\n */\n\n/**\n * @typedef {string|string[]|QueryArgObject} QueryArgParsed\n */\n\n/**\n * Returns a single query argument of the url\n *\n * @param {string} url URL.\n * @param {string} arg Query arg name.\n *\n * @example\n * ```js\n * const foo = getQueryArg( 'https://wordpress.org?foo=bar&bar=baz', 'foo' ); // bar\n * ```\n *\n * @return {QueryArgParsed|void} Query arg value.\n */\n\nexport function getQueryArg(url, arg) {\n  return getQueryArgs(url)[arg];\n}\n//# sourceMappingURL=get-query-arg.js.map","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n"],"names":["V3_URL","V3_URL_REGEX","EXISTING_SCRIPT_MESSAGE","stripePromise","loadScript","params","Promise","resolve","reject","window","document","Stripe","console","warn","script","scripts","querySelectorAll","concat","i","length","test","src","findScript","queryString","advancedFraudSignals","createElement","headOrBody","head","body","Error","appendChild","injectScript","addEventListener","error","stripePromise$1","then","loadCalled","err","loadStripe","_len","arguments","args","Array","_key","startTime","Date","now","maybeStripe","stripe","apply","undefined","_registerWrapper","name","version","registerWrapper","initStripe","modifyQuery","path","url","options","queryArgs","parseResponse","response","json","getNextPageUrl","next","linkHeader","match","parseLinkHeader","headers","get","async","parse","pathIsUnbounded","indexOf","urlIsUnbounded","requestContainsUnboundedQuery","per_page","results","isArray","nextPage","mergedResults","nextResponse","nextResults","OVERRIDE_METHODS","Set","DEFAULT_METHOD","method","has","toUpperCase","isCreateMethod","isMediaUploadRequest","retries","postProcess","attachmentId","data","action","catch","status","code","message","__","namespaceTrimmed","endpointTrimmed","namespace","endpoint","replace","nonce","middleware","headerName","toLowerCase","normalizePath","splitted","split","query","base","map","entry","pair","decodeURIComponent","sort","a","b","localeCompare","encodeURIComponent","join","prepareResponse","responseData","Response","JSON","stringify","statusText","preloadedData","cache","Object","fromEntries","entries","rawPath","rest_route","pathFromQuery","cacheData","rootURL","optionsWithPath","apiRoot","themePath","theme_preview","_locale","parseJsonAndNormalizeError","invalidJsonError","parseResponseAndNormalizeError","shouldParseResponse","res","parseAndThrowError","unknownError","hookName","hooks","storeKey","callback","priority","hooksStore","handler","handlers","splice","__current","forEach","hookInfo","currentIndex","runs","doAction","removeAll","handlersRemoved","some","hook","returnFirstArg","push","result","pop","_hooksStore$__current","_Hooks","constructor","this","actions","create","filters","addAction","addFilter","removeAction","removeFilter","hasAction","hasFilter","removeAllActions","removeAllFilters","applyFilters","currentAction","currentFilter","doingAction","doingFilter","didAction","didFilter","PRECEDENCE","OPENERS","TERMINATORS","PATTERN","OPERATORS","c","compile","expression","terms","operator","term","element","stack","substr","index","trim","reverse","postfix","variables","j","getOperatorResult","value","earlyReturn","hasOwnProperty","evaluate","DEFAULT_OPTIONS","contextDelimiter","onMissingKey","Tannin","key","pluralForms","prototype","getPluralForm","domain","n","config","plural","pf","plural_forms","parts","part","getPluralExpression","dcnpgettext","context","singular","DEFAULT_LOCALE_DATA","I18N_HOOK_REGEXP","createI18n","initialData","initialDomain","tannin","listeners","notifyListeners","listener","doSetLocaleData","setLocaleData","single","number","getFilterDomain","_x","text","translation","onHookAddedOrRemoved","getLocaleData","addLocaleData","resetLocaleData","subscribe","add","delete","_n","_nx","isRTL","hasTranslation","i18n","bind","addQueryArgs","keys","baseUrl","queryStringIndex","assign","string","shift","valuePairs","member","memberValue","unshift","buildQueryString","safeDecodeURIComponent","uriComponent","uriComponentError","getQueryArgs","URL","search","substring","getQueryString","reduce","accumulator","keyValue","filter","Boolean","object","lastIndex","toString","includes","isNextKeyArrayIndex","isNaN","Number","setPath","hasQueryArg","arg","getQueryArg","memize","fn","tail","size","memoized","node","len","searchCache","prev","val","maxSize","clear"],"sourceRoot":""}