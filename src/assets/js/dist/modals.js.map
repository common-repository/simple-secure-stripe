{"version":3,"file":"modals.js","mappings":"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","sources":["webpack://simple-secure-stripe/./src/assets/js/admin/modals.js"],"sourcesContent":["(function ($) {\n\n    $.fn.WCStripePayOrderBackboneModal = function (options) {\n        return this.each(function () {\n            new $.WCStripePayOrderBackboneModal($(this), options);\n        })\n    }\n\n    $.WCStripePayOrderBackboneModal = function (element, options) {\n        var settings = $.extend({}, $.WCBackboneModal.defaultOptions, options);\n\n        if (settings.template) {\n            new $.WCStripePayOrderBackboneModal.View({\n                target: settings.template,\n                string: settings.params\n            });\n        }\n    }\n\n    $.WCStripePayOrderBackboneModal.View = $.WCBackboneModal.View.extend({\n        events: _.extend($.WCBackboneModal.View.prototype.events, {\n            'click #pay-order': 'pay_order',\n            'change [name=\"payment_type\"]': 'payment_type'\n        }),\n        render: function () {\n            $.WCBackboneModal.View.prototype.render.apply(this, arguments);\n            this.$el.find('.wc-select2').select2();\n            this.init_card_element();\n            this.payment_type();\n        },\n        init_card_element: function () {\n            this.stripe = Stripe(sswps_order_pay_params.api_key);\n            var elements = this.stripe.elements();\n            this.card = elements.create('card', {\n                style: {\n                    'base': {\n                        'color': '#32325d',\n                        'fontFamily': '\"Helvetica Neue\", Helvetica, sans-serif',\n                        'fontSmoothing': 'antialiased',\n                        'fontSize': '18px',\n                        '::placeholder': {\n                            'color': '#aab7c4'\n                        }\n\n                    }\n                },\n                hidePostalCode: true\n            });\n            this.card.mount('#card-element');\n        },\n        pay_order: function (e) {\n            e.preventDefault();\n            if (!this.use_token()) {\n                this.stripe.createPaymentMethod({\n                    type: 'card',\n                    card: this.card,\n                    billing_details: {\n                        name: $('#_billing_first_name').val() + ' ' + $('#_billing_last_name').val(),\n                        email: $('#_billing_email').val(),\n                        phone: $('#_billing_phone').val(),\n                        address: {\n                            city: $('#_billing_city').val(),\n                            country: $('#_billing_country').val(),\n                            line1: $('#_billing_address_1').val(),\n                            line2: $('#_billing_address_2').val(),\n                            state: $('#_billing_state').val(),\n                            postal_code: $('#_billing_postcode').val()\n                        }\n                    }\n                }).then(function (result) {\n                    if (result.error) {\n                        this.add_messages(result.error.message);\n                    } else {\n                        $('[name=\"payment_nonce\"]').val(result.paymentMethod.id);\n                        this.api_pay_order();\n                    }\n                }.bind(this));\n            } else {\n                this.api_pay_order()\n            }\n        },\n        api_pay_order: function () {\n            this.block();\n            $.ajax({\n                url: sswps_order_metabox_params.routes.pay,\n                dataType: 'json',\n                method: 'POST',\n                data: $('#sswps-pay-order-form').serialize(),\n                beforeSend: function (xhr) {\n                    xhr.setRequestHeader('X-WP-Nonce', sswps_order_metabox_params._wpnonce);\n                }\n            }).done(function (response) {\n                if (response.code) {\n                    this.unblock();\n                    this.add_messages(response.message);\n                } else {\n                    window.location.href = window.location.href;\n                }\n            }.bind(this)).fail(function (xhr, textStatus, errorThrown) {\n                this.add_messages(errorThrown);\n                this.unblock();\n            }.bind(this))\n        },\n        payment_type: function (e) {\n            var val = this.$el.find('[name=\"payment_type\"]:checked').val();\n            var show_if = '.show_if_' + val,\n                hide_if = '.hide_if_' + val;\n            this.$el.find(show_if).show();\n            this.$el.find(hide_if).hide();\n        },\n        block: function () {\n            this.$el.find('.wc-backbone-modal-content').block({\n                message: null,\n                overlayCSS: {\n                    background: '#fff',\n                    opacity: 0.6\n                }\n            });\n        },\n        unblock: function () {\n            this.$el.find('.wc-backbone-modal-content').unblock();\n        },\n        add_messages: function (messages) {\n            this.$el.find('.woocommerce-error').remove();\n            if (messages.indexOf('woocommerce-error') == -1) {\n                messages = '<div class=\"woocommerce-error\">' + messages + '</div>';\n            }\n            this.$el.find('form').prepend(messages);\n        },\n        use_token: function () {\n            return this.$el.find('[name=\"payment_type\"]:checked').val() === 'token';\n        },\n        set_nonce: function (value) {\n            this.$el.find('[name=\"payment_nonce\"]').val(value);\n        }\n    });\n}(jQuery));"],"names":["$","jQuery","fn","WCStripePayOrderBackboneModal","options","this","each","element","settings","extend","WCBackboneModal","defaultOptions","template","View","target","string","params","events","_","prototype","render","apply","arguments","$el","find","select2","init_card_element","payment_type","stripe","Stripe","sswps_order_pay_params","api_key","elements","card","create","style","hidePostalCode","mount","pay_order","e","preventDefault","use_token","api_pay_order","createPaymentMethod","type","billing_details","name","val","email","phone","address","city","country","line1","line2","state","postal_code","then","result","error","add_messages","message","paymentMethod","id","bind","block","ajax","url","sswps_order_metabox_params","routes","pay","dataType","method","data","serialize","beforeSend","xhr","setRequestHeader","_wpnonce","done","response","code","unblock","window","location","href","fail","textStatus","errorThrown","show_if","hide_if","show","hide","overlayCSS","background","opacity","messages","remove","indexOf","prepend","set_nonce","value"],"sourceRoot":""}